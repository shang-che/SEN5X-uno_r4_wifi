#include <Arduino.h>
#include <RTClib.h>
#include <SdFat.h>
#include <SensirionI2CSen5x.h>
#include <Wire.h>

#include "ArduinoGraphics.h"
#include "Arduino_LED_Matrix.h"
#define SD_CS_PIN 9

RTC_DS3231 rtc;
SensirionI2CSen5x sen5x;
SdFat SD;
String filename;
DateTime now;
ArduinoLEDMatrix matrix;

void setup() {
    Serial.begin(115200);
    while (!Serial) {
        delay(100);
    }

    Wire.begin();
    sen5x.begin(Wire);

    // init SD //SPI
    if (!SD.begin(SD_CS_PIN, SD_SCK_MHZ(4))) {
        Serial.println(
            "Can't init the SD cardm please check the cable connection or "
            "formation.");
        while (1);
    }
    Serial.println("SD card is already initialization.");

    // init RTC //I2C
    if (!rtc.begin()) {
        Serial.println("Can't find RTC module");
        while (1);
    }

    // init SEN5x
    uint16_t error = sen5x.deviceReset();
    if (error) {
        Serial.println("SEN5x initialize failed.");
        while (1);
    }
    Serial.println("SEN5x is already initialization.");

    // start
    error = sen5x.startMeasurement();
    if (error) {
        Serial.println("SEN5x measure failed");
        while (1);
    }
    now = rtc.now();
    // prepare SD Card filename ex:yy-m-d-hh-mm-ss.csv
    filename = String(now.year() - 2000) + "-" + String(now.month()) + "-" +
               String(now.day()) + "-" + String(now.hour()) + "-" +
               String(now.minute()) + "-" + String(now.second()) + ".csv";
    // prepare the title in the file
    String dataLine =
        "Time,PM1.0,PM2.5,PM4.0,PM10.0,Humidity,Temperature,VOC,NOx\n";
    File dataFile = SD.open(filename, FILE_WRITE);
    // Write the title in the SD Card
    if (dataFile) {
        dataFile.print(dataLine);
        dataFile.close();
        Serial.println("Data already write in SD Card: \nfilename: " +
                       filename);
        Serial.print(dataLine);
    } else {
        Serial.println("Can't write in SD Card!!!!");
    }
    matrix.begin();
}

void loop() {
    uint16_t error;
    char errorMessage[256];

    // read RTC time
    now = rtc.now();
    String timestamp = String(now.year()) + "/" + String(now.month()) + "/" +
                       String(now.day()) + " " + String(now.hour()) + ":" +
                       String(now.minute()) + ":" + String(now.second());

    // read SEN5x digit
    float massConcentrationPm1p0, massConcentrationPm2p5,
        massConcentrationPm4p0, massConcentrationPm10p0;
    float ambientHumidity, ambientTemperature, vocIndex, noxIndex;

    error = sen5x.readMeasuredValues(
        massConcentrationPm1p0, massConcentrationPm2p5, massConcentrationPm4p0,
        massConcentrationPm10p0, ambientHumidity, ambientTemperature, vocIndex,
        noxIndex);

    if (error) {
        Serial.print("Error reading from SEN5x: ");
        errorToString(error, errorMessage, 256);
        Serial.println(errorMessage);
        return;
    }

    // prepare SD card data
    String dataLine =
        timestamp + "," + String(massConcentrationPm1p0) + "," +
        String(massConcentrationPm2p5) + "," + String(massConcentrationPm4p0) +
        "," + String(massConcentrationPm10p0) + "," + String(ambientHumidity) +
        "," + String(ambientTemperature) + "," + String(vocIndex) + "," +
        String(noxIndex) + "\n";

    // write in SD card

    File dataFile = SD.open(filename, FILE_WRITE);
    if (dataFile) {
        dataFile.print(dataLine);
        dataFile.close();
        Serial.println("Data already write in SD Card: \nfilename: " +
                       filename);
        Serial.print(dataLine);
        // float tempC = rtc.getTemperature();
        // Serial.print(tempC);
    } else {
        Serial.println("Can't write in SD Card!!!!");
    }

    delay(1000);

    matrix.beginDraw();
    matrix.stroke(0xFFFFFFFF);
    matrix.textScrollSpeed(50);
    // add the text
    const char text[] = "Hello World!";
    matrix.textFont(Font_4x6);
    matrix.beginText(0, 1, 0x00FFFF);
    matrix.textScrollSpeed(100);
    matrix.println(text);
    matrix.endText(1);

    matrix.endDraw();
}
